//Day 33: Aggressive Cows

//You are given an array with unique elements of stalls[], which denote the position of a stall. You are also given an integer k which denotes the number of aggressive cows. 
//Your task is to assign stalls to k cows such that the minimum distance between any two of them is the maximum possible.






// User function Template for Java
class Solution {
    
    public static boolean isPossible(int[] stalls, int k, int mid, int n){
        int c=1,prev=stalls[0];
        for(int i=1;i<n;i++){
            if(stalls[i]-prev>=mid){
                c++;
                prev=stalls[i];
            }
        }
        return c>=k;
    }
    public static int aggressiveCows(int[] stalls, int k) {
        // code here
        
        Arrays.sort(stalls);
        int n=stalls.length,low=0,high=stalls[n-1]-stalls[0],mid,ans=0;
        
        while(low<=high){
            mid=(low+high)/2;
            if(isPossible(stalls,k,mid,n)){
                ans=Math.max(mid,ans);
                low=mid+1;
            }
            else high=mid-1;
        }
        return ans;
    }
}
